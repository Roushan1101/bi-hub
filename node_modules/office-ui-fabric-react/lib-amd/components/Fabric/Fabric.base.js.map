{"version":3,"file":"Fabric.base.js","sourceRoot":"../src/","sources":["components/Fabric/Fabric.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Customizer,\n  getNativeProps,\n  on,\n  divProperties,\n  classNamesFunction,\n  getWindow,\n  getDocument,\n  isDirectionalKeyCode,\n  memoizeFunction,\n  getRTL\n} from '../../Utilities';\nimport { getStyles } from './Fabric.styles';\nimport { IFabricProps, IFabricStyleProps, IFabricStyles } from './Fabric.types';\nimport { IProcessedStyleSet } from '@uifabric/merge-styles';\nimport { ITheme, createTheme } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IFabricStyleProps, IFabricStyles>();\nconst getFabricTheme = memoizeFunction((theme?: ITheme, isRTL?: boolean) => createTheme({ ...theme, rtl: isRTL }));\nconst getDir = memoizeFunction((theme?: ITheme, dir?: IFabricProps['dir']) => {\n  if (dir) {\n    return dir;\n  }\n  if (theme && theme.rtl !== undefined) {\n    return theme.rtl ? 'rtl' : 'ltr';\n  }\n  return getRTL() ? 'rtl' : 'ltr';\n});\n\nexport class FabricBase extends React.Component<\n  IFabricProps,\n  {\n    isFocusVisible: boolean;\n  }\n> {\n  private _rootElement = React.createRef<HTMLDivElement>();\n  private _disposables: (() => void)[] = [];\n  private _removeClassNameFromBody?: () => void = undefined;\n\n  constructor(props: IFabricProps) {\n    super(props);\n    this.state = { isFocusVisible: false };\n  }\n\n  public render() {\n    const { as: Root = 'div', theme, dir } = this.props;\n    const classNames = this._getClassNames();\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties, ['dir']);\n    const componentDir = getDir(theme, dir);\n    const parentDir = getDir(theme);\n\n    let renderedContent = <Root dir={componentDir} {...divProps} className={classNames.root} ref={this._rootElement} />;\n\n    // Create the contextual theme if component direction does not match parent direction.\n    if (componentDir !== parentDir) {\n      renderedContent = <Customizer settings={{ theme: getFabricTheme(theme, dir === 'rtl') }}>{renderedContent}</Customizer>;\n    }\n\n    return renderedContent;\n  }\n\n  public componentDidMount(): void {\n    const win = getWindow(this._rootElement.current);\n    if (win) {\n      this._disposables.push(\n        on(win, 'mousedown', this._onMouseDown, true),\n        on(win, 'keydown', this._onKeyDown, true),\n        on(win, 'pointerdown', this._onPointerDown, true)\n      );\n    }\n    this._addClassNameToBody();\n  }\n\n  public componentWillUnmount(): void {\n    this._disposables.forEach((dispose: () => void) => dispose());\n    if (this._removeClassNameFromBody) {\n      this._removeClassNameFromBody();\n    }\n  }\n\n  private _getClassNames(): IProcessedStyleSet<IFabricStyles> {\n    const { className, theme, applyTheme } = this.props;\n    const classNames = getClassNames(getStyles, {\n      theme: theme!,\n      applyTheme: applyTheme,\n      className,\n      isFocusVisible: this.state.isFocusVisible\n    });\n    return classNames;\n  }\n\n  private _addClassNameToBody(): void {\n    if (this.props.applyThemeToBody) {\n      const classNames = this._getClassNames();\n      const currentDoc = getDocument(this._rootElement.current);\n      if (currentDoc) {\n        currentDoc.body.classList.add(classNames.bodyThemed);\n        this._removeClassNameFromBody = () => {\n          currentDoc.body.classList.remove(classNames.bodyThemed);\n        };\n      }\n    }\n  }\n\n  private _onMouseDown = (ev: MouseEvent): void => {\n    this.setState({ isFocusVisible: false });\n  };\n\n  private _onPointerDown = (ev: PointerEvent): void => {\n    if (ev.pointerType !== 'mouse') {\n      this.setState({ isFocusVisible: false });\n    }\n  };\n\n  private _onKeyDown = (ev: KeyboardEvent): void => {\n    if (isDirectionalKeyCode(ev.which)) {\n      this.setState({ isFocusVisible: true });\n    }\n  };\n}\n"]}