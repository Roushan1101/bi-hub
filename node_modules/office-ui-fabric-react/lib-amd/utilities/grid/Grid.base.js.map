{"version":3,"file":"Grid.base.js","sourceRoot":"../src/","sources":["utilities/grid/Grid.base.tsx"],"names":[],"mappings":";;;IAKA,IAAM,aAAa,GAAG,8BAAkB,EAAgC,CAAC;IAEzE;QAA8B,oCAA6B;QAGzD,kBAAY,KAAiB;YAA7B,YACE,kBAAM,KAAK,CAAC,SAEb;YADC,KAAI,CAAC,GAAG,GAAG,KAAK,CAAC,EAAE,IAAI,iBAAK,EAAE,CAAC;;QACjC,CAAC;QAEM,yBAAM,GAAb;YAAA,iBAwDC;YAvDC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAEvB,IAAA,mBAAK,EACL,+BAAW,EACX,iCAAY,EACZ,uBAAkC,EAAlC,uDAAkC,EAClC,sBAA2B,EAA3B,gDAA2B,EAC3B,qBAAM,EACN,+DAA2B,CACnB;YAEV,IAAM,SAAS,GAAG,0BAAc,CAC9B,IAAI,CAAC,KAAK,EACV,iCAAqB;YACrB,yEAAyE;YACzE,2BAA2B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAC9C,CAAC;YAEF,IAAM,UAAU,GAAG,aAAa,CAAC,MAAO,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAM,EAAE,CAAC,CAAC;YAExE,oDAAoD;YACpD,IAAM,WAAW,GAAY,oBAAQ,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;YAE1D,IAAM,OAAO,GAAG,CACd,iEAAsB,YAAY,kBAAgB,WAAW,EAAE,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAC,MAAM,IAAK,SAAS,IAAE,SAAS,EAAE,UAAU,CAAC,IAAI;gBAChI,mCACG,WAAW,CAAC,GAAG,CAAC,UAAC,IAAW,EAAE,QAAgB;oBAC7C,OAAO,CACL,4BAAI,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,KAAI,CAAC,GAAG,GAAG,GAAG,GAAG,QAAQ,GAAG,MAAM,IACrD,IAAI,CAAC,GAAG,CAAC,UAAC,IAAS,EAAE,SAAiB;wBACrC,OAAO,CACL,4BAAI,IAAI,EAAE,cAAc,EAAE,GAAG,EAAE,KAAI,CAAC,GAAG,GAAG,GAAG,GAAG,SAAS,GAAG,OAAO,EAAE,SAAS,EAAE,UAAU,CAAC,SAAS,IACjG,YAAY,CAAC,IAAI,EAAE,SAAS,CAAC,CAC3B,CACN,CAAC;oBACJ,CAAC,CAAC,CACC,CACN,CAAC;gBACJ,CAAC,CAAC,CACI,CACF,CACT,CAAC;YAEF,wBAAwB;YACxB,OAAO,2BAA2B,CAAC,CAAC,CAAC,CACnC,OAAO,CACR,CAAC,CAAC,CAAC,CACF,oBAAC,qBAAS,IACR,oBAAoB,EAAE,IAAI,CAAC,KAAK,CAAC,2BAA2B,EAC5D,SAAS,EAAE,UAAU,CAAC,gBAAgB,EACtC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,IAExB,OAAO,CACE,CACb,CAAC;QACJ,CAAC;QACH,eAAC;IAAD,CAAC,AAjED,CAA8B,yBAAa,GAiE1C;IAjEY,4BAAQ","sourcesContent":["import * as React from 'react';\nimport { BaseComponent, getId, toMatrix, classNamesFunction, getNativeProps, htmlElementProperties } from '../../Utilities';\nimport { FocusZone } from '../../FocusZone';\nimport { IGrid, IGridProps, IGridStyleProps, IGridStyles } from './Grid.types';\n\nconst getClassNames = classNamesFunction<IGridStyleProps, IGridStyles>();\n\nexport class GridBase extends BaseComponent<IGridProps, {}> implements IGrid {\n  private _id: string;\n\n  constructor(props: IGridProps) {\n    super(props);\n    this._id = props.id || getId();\n  }\n\n  public render(): JSX.Element {\n    const props = this.props;\n    const {\n      items,\n      columnCount,\n      onRenderItem,\n      ariaPosInSet = props.positionInSet,\n      ariaSetSize = props.setSize,\n      styles,\n      doNotContainWithinFocusZone\n    } = props;\n\n    const htmlProps = getNativeProps<React.HTMLAttributes<HTMLTableElement>>(\n      this.props,\n      htmlElementProperties,\n      // avoid applying onBlur on the table if it's being used in the FocusZone\n      doNotContainWithinFocusZone ? [] : ['onBlur']\n    );\n\n    const classNames = getClassNames(styles!, { theme: this.props.theme! });\n\n    // Array to store the cells in the correct row index\n    const rowsOfItems: any[][] = toMatrix(items, columnCount);\n\n    const content = (\n      <table aria-posinset={ariaPosInSet} aria-setsize={ariaSetSize} id={this._id} role=\"grid\" {...htmlProps} className={classNames.root}>\n        <tbody>\n          {rowsOfItems.map((rows: any[], rowIndex: number) => {\n            return (\n              <tr role={'row'} key={this._id + '-' + rowIndex + '-row'}>\n                {rows.map((cell: any, cellIndex: number) => {\n                  return (\n                    <td role={'presentation'} key={this._id + '-' + cellIndex + '-cell'} className={classNames.tableCell}>\n                      {onRenderItem(cell, cellIndex)}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n\n    // Create the table/grid\n    return doNotContainWithinFocusZone ? (\n      content\n    ) : (\n      <FocusZone\n        isCircularNavigation={this.props.shouldFocusCircularNavigate}\n        className={classNames.focusedContainer}\n        onBlur={this.props.onBlur}\n      >\n        {content}\n      </FocusZone>\n    );\n  }\n}\n"]}