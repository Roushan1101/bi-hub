{"version":3,"file":"Fabric.base.js","sourceRoot":"../src/","sources":["components/Fabric/Fabric.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Customizer,\n  getNativeProps,\n  on,\n  divProperties,\n  classNamesFunction,\n  getWindow,\n  getDocument,\n  isDirectionalKeyCode,\n  memoizeFunction,\n  getRTL\n} from '../../Utilities';\nimport { getStyles } from './Fabric.styles';\nimport { IFabricProps, IFabricStyleProps, IFabricStyles } from './Fabric.types';\nimport { IProcessedStyleSet } from '@uifabric/merge-styles';\nimport { ITheme, createTheme } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IFabricStyleProps, IFabricStyles>();\nconst getFabricTheme = memoizeFunction((theme?: ITheme, isRTL?: boolean) => createTheme({ ...theme, rtl: isRTL }));\nconst getDir = memoizeFunction((theme?: ITheme, dir?: IFabricProps['dir']) => {\n  if (dir) {\n    return dir;\n  }\n  if (theme && theme.rtl !== undefined) {\n    return theme.rtl ? 'rtl' : 'ltr';\n  }\n  return getRTL() ? 'rtl' : 'ltr';\n});\n\nexport class FabricBase extends React.Component<\n  IFabricProps,\n  {\n    isFocusVisible: boolean;\n  }\n> {\n  private _rootElement = React.createRef<HTMLDivElement>();\n  private _disposables: (() => void)[] = [];\n  private _removeClassNameFromBody?: () => void = undefined;\n\n  constructor(props: IFabricProps) {\n    super(props);\n    this.state = { isFocusVisible: false };\n  }\n\n  public render() {\n    const { as: Root = 'div', theme, dir } = this.props;\n    const classNames = this._getClassNames();\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties, ['dir']);\n    const componentDir = getDir(theme, dir);\n    const parentDir = getDir(theme);\n\n    let renderedContent = <Root dir={componentDir} {...divProps} className={classNames.root} ref={this._rootElement} />;\n\n    // Create the contextual theme if component direction does not match parent direction.\n    if (componentDir !== parentDir) {\n      renderedContent = <Customizer settings={{ theme: getFabricTheme(theme, dir === 'rtl') }}>{renderedContent}</Customizer>;\n    }\n\n    return renderedContent;\n  }\n\n  public componentDidMount(): void {\n    const win = getWindow(this._rootElement.current);\n    if (win) {\n      this._disposables.push(\n        on(win, 'mousedown', this._onMouseDown, true),\n        on(win, 'keydown', this._onKeyDown, true),\n        on(win, 'pointerdown', this._onPointerDown, true)\n      );\n    }\n    this._addClassNameToBody();\n  }\n\n  public componentWillUnmount(): void {\n    this._disposables.forEach((dispose: () => void) => dispose());\n    if (this._removeClassNameFromBody) {\n      this._removeClassNameFromBody();\n    }\n  }\n\n  private _getClassNames(): IProcessedStyleSet<IFabricStyles> {\n    const { className, theme, applyTheme } = this.props;\n    const classNames = getClassNames(getStyles, {\n      theme: theme!,\n      applyTheme: applyTheme,\n      className,\n      isFocusVisible: this.state.isFocusVisible\n    });\n    return classNames;\n  }\n\n  private _addClassNameToBody(): void {\n    if (this.props.applyThemeToBody) {\n      const classNames = this._getClassNames();\n      const currentDoc = getDocument(this._rootElement.current);\n      if (currentDoc) {\n        currentDoc.body.classList.add(classNames.bodyThemed);\n        this._removeClassNameFromBody = () => {\n          currentDoc.body.classList.remove(classNames.bodyThemed);\n        };\n      }\n    }\n  }\n\n  private _onMouseDown = (ev: MouseEvent): void => {\n    this.setState({ isFocusVisible: false });\n  };\n\n  private _onPointerDown = (ev: PointerEvent): void => {\n    if (ev.pointerType !== 'mouse') {\n      this.setState({ isFocusVisible: false });\n    }\n  };\n\n  private _onKeyDown = (ev: KeyboardEvent): void => {\n    if (isDirectionalKeyCode(ev.which)) {\n      this.setState({ isFocusVisible: true });\n    }\n  };\n}\n"]}