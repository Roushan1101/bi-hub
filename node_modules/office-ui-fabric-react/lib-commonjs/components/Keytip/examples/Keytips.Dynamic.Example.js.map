{"version":3,"file":"Keytips.Dynamic.Example.js","sourceRoot":"../src/","sources":["components/Keytip/examples/Keytips.Dynamic.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4DAAkE;AAMlE;IAA2C,iDAAsC;IAC/E,+BAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAKb;QAiCO,mBAAa,GAAG,UAAC,MAAc;YACrC,OAAO;gBACL,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC,CAAC;YACxC,CAAC,CAAC;QACJ,CAAC,CAAC;QAxCA,KAAI,CAAC,KAAK,GAAG;YACX,UAAU,EAAE,UAAU;SACvB,CAAC;;IACJ,CAAC;IAED,kCAAkC;IAC3B,sCAAM,GAAb;QACE,IAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,KAAK,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;QAC3E,OAAO,CACL;YACE,0fAKI;YACJ,oBAAC,sBAAa,IACZ,IAAI,EAAC,UAAU,EACf,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EACvC,WAAW,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,kBAAkB,EAAE,IAAI,EAAE,GAC3H;YACF,oBAAC,sBAAa,IACZ,IAAI,EAAC,UAAU,EACf,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EACvC,WAAW,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,kBAAkB,EAAE,IAAI,EAAE,GAC3H;YACF;gBACE,oBAAC,sBAAa,IACZ,IAAI,EAAE,8BAA8B,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,EAC5D,WAAW,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC,aAAa,EAAE,KAAK,CAAC,EAAE,GACrE,CACE,CACF,CACP,CAAC;IACJ,CAAC;IAOH,4BAAC;AAAD,CAAC,AA7CD,CAA2C,KAAK,CAAC,SAAS,GA6CzD;AA7CY,sDAAqB","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\n\ninterface IKeytipsTestState {\n  currButton: string;\n}\n\nexport class KeytipsDynamicExample extends React.Component<{}, IKeytipsTestState> {\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      currButton: 'Button 1'\n    };\n  }\n\n  /* tslint:disable:jsx-no-lambda */\n  public render(): JSX.Element {\n    const startSequence = this.state.currButton === 'Button 1' ? 'gg1' : 'gg2';\n    return (\n      <div>\n        <p>\n          There is another special case where controls on the page will change other controls down the chain in the keytip sequence. Take\n          the case below; clicking Button 1 and Button 2 will update the text of Button3. Triggering the keytip for Button 1 or Button 2\n          will then also change the keytip sequence of Button 3, because it can be both a child of Button 1 or Button 2. For this to work\n          fully, Button 1 and Button 2 should have `hasDynamicChildren: true` in their keytip props\n        </p>\n        <DefaultButton\n          text=\"Button 1\"\n          onClick={this.setCurrButton('Button 1')}\n          keytipProps={{ content: 'GG1', keySequences: ['gg1'], onExecute: this.setCurrButton('Button 1'), hasDynamicChildren: true }}\n        />\n        <DefaultButton\n          text=\"Button 2\"\n          onClick={this.setCurrButton('Button 2')}\n          keytipProps={{ content: 'GG2', keySequences: ['gg2'], onExecute: this.setCurrButton('Button 2'), hasDynamicChildren: true }}\n        />\n        <div>\n          <DefaultButton\n            text={'Button 3, active button is: ' + this.state.currButton}\n            keytipProps={{ content: 'GG3', keySequences: [startSequence, 'gg3'] }}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private setCurrButton = (button: string) => {\n    return () => {\n      this.setState({ currButton: button });\n    };\n  };\n}\n"]}